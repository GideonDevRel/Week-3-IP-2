# This file builds the Docker images for a React/NodeJS application and runs it as microservices on Docker containers

# To ensure successful execution, clone this entire repository and execute this file while in the root folder of the cloned repository

# It's also a requirement to have Docker and the docker-compose plugin installed in your environment

# To launch this app without having to clone the entire repository, use the docker-compose.yaml file to run the app

version: "3.8"

services:

  # Builds the frontend Docker image and creates the frontend microservice
  yolo-client:
    image: gideondevrel/yolo-client:v1.0.0
    build: 
      context: ./client
      target: production
    container_name: yolo-client
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    depends_on: 
      - yolo-backend
    networks:
      - yolo-network
    environment:
      - REACT_APP_API_URL=http://yolo-backend:5000
    restart: unless-stopped

  # Builds the backend Docker image and creates the backend microservice
  yolo-backend:
    image: gideondevrel/yolo-backend:v1.0.0
    build: 
      context: ./backend
      target: production
    container_name: yolo-backend
    stdin_open: true
    tty: true
    restart: always
    ports:
      - "5000:5000"
    depends_on: 
      - yolo-mongo
    networks:
      - yolo-network
    environment:
      - MONGODB_URI=mongodb://yolo-mongo:27017/yolodb
      - NODE_ENV=production

  # Creates the database microservice
  yolo-mongo:
    image: mongo:5.0
    container_name: yolo-mongo
    ports:
      - "27017:27017"
    networks:
      - yolo-network
    volumes:
      - type: volume
        source: yolo-mongo-data
        target: /data/db
    environment:
      - MONGO_INITDB_DATABASE=yolodb
    restart: unless-stopped

# Creates the network infrastructure necessary for the containers to communicate with each other
networks:
  yolo-network:
    name: yolo-network
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16 
          ip_range: 172.20.0.0/16 

# Creates a Docker volume that persists all the data stored in the database
volumes:
  yolo-mongo-data:
    driver: local